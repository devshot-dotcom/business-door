@use "./vars";
@use "./mixins";

// Text colors
@each $color-name, $color-map in vars.$colors {
  .text-#{$color-name} {
    color: map-get($color-map, "400");

    // Link's color swaps with theme.
    @if ($color-name == "link") {
      color: var(--theme-color-link);
    }
  }
}

// Show/Hide
.show {
  display: block;
}

.hide {
  display: none;
}

.show-when-sidebar-appears {
  @include mixins.when-sidebar-appears() {
    display: block;
  }
}

.hide-when-sidebar-appears {
  @include mixins.when-sidebar-appears() {
    display: none;
  }
}

.show-when-vertical-nav-appears {
  @include mixins.when-vertical-nav-appears() {
    display: block;
  }
}

.hide-when-vertical-nav-appears {
  @include mixins.when-vertical-nav-appears() {
    display: none;
  }
}

@each $breakpoint-name, $breakpoint-value in vars.$breakpoints {
  .show-on-#{$breakpoint-name} {
    display: none;

    @media (min-width: $breakpoint-value) {
      display: block;
    }
  }

  .hide-on-#{$breakpoint-name} {
    @media (min-width: $breakpoint-value) {
      display: none;
    }
  }
}

// Typography
.text-bold {
  font-weight: 700;
}

.text-regular {
  font-weight: 500;
}

.text-subtle {
  color: var(--theme-color-text-subtle);
}

.text-link {
  font-weight: 700;
  text-decoration: underline;
}

//* Layout
// Position
.layout-absolute {
  position: absolute;

  &.top-left {
    top: 0;
    left: 0;
  }

  &.top-right {
    top: 0;
    right: 0;
  }

  &.bottom-right {
    bottom: 0;
    right: 0;
  }

  &.bottom-left {
    bottom: 0;
    left: 0;
  }

  &.center {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  &.center-left {
    top: 50%;
    left: 0;
    transform: translateY(-50%);
  }

  &.center-top {
    left: 50%;
    top: 0;
    transform: translateX(-50%);
  }

  &.center-right {
    top: 50%;
    right: 0;
    transform: translateY(-50%);
  }

  &.center-bottom {
    left: 50%;
    bottom: 0;
    transform: translateX(-50%);
  }
}
