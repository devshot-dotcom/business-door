@import "./vars";
@import "./typography";

@mixin inputContainer {
  background-color: var(--appTheme-colorBackground);
  display: inline-flex;
  justify-content: space-between;
  align-items: center;
  padding-right: $spacerDefault;
  gap: $spacerDefault;
  border-radius: $spacerSmaller;
  transition: outline $transitionShort linear;
  cursor: text;
}

@mixin InputState($color, $lightColor) {
  border: 1px solid $color;
  outline: calc(#{$spacerSmaller} / 2) solid $lightColor;

  .icon {
    cursor: pointer;
    color: $color;
    > path {
      color: $color;
    }
  }
}

.inputContainer {
  @include inputContainer;

  input {
    padding: calc(#{$spacerMedium} / 2) $spacerDefault;
    padding-right: 0;
    background-color: transparent;
    border: 0;
    border-radius: $spacerSmaller;

    &:focus {
      outline: 0;
    }

    &::placeholder {
      color: var(--appTheme-colorTextSubtle);
    }
  }

  &.inputActive {
    @include InputState(map-get($colorLink, "400"), map-get($colorLink, "25%"));
  }

  &.inputValid {
    @include InputState(
      map-get($colorValid, "400"),
      map-get($colorValid, "25%")
    );
  }

  &.inputInvalid {
    @include InputState(
      map-get($colorInvalid, "400"),
      map-get($colorInvalid, "25%")
    );
  }

  &.inputDisabled {
    cursor: no-drop;

    input {
      cursor: no-drop;
      color: var(--appTheme-colorTextSubtle);
    }

    .icon {
      cursor: pointer;
      color: map-get($map: $colorTertiary, $key: "400");
      > path {
        color: map-get($map: $colorTertiary, $key: "400");
      }
    }
  }
}
