@use "../../sass/vars";
@use "../../sass/mixins";

#landing {
  > section,
  > aside,
  > footer {
    position: relative;
  }

  #hero {
    // Controls vector sizes.
    // Controls hero's width.
    $vector-size: 3.5rem;

    display: flex;
    flex-direction: column;
    background-color: var(--theme-color-background);
    min-height: vars.$breakpoint-tablet;
    height: 100%;
    max-height: vars.$breakpoint-laptop;

    .spaced-for-nav {
      display: flex;
      flex-direction: column;
      flex-grow: 1;
    }

    header {
      padding: var(--layout-gap);
      // To nullify the gap between the children.
      padding-bottom: 0;
    }

    article {
      flex-grow: 1;
      padding: var(--layout-gap);
      // Vertical Flexbox
      display: flex;
      flex-direction: column;
      justify-content: center;
      gap: vars.$size-small;

      .hero__title {
        padding-right: $vector-size;
      }

      .hero__buttons {
        display: flex;
        flex-direction: column;
        gap: vars.$size-small;
      }

      @media (min-width: vars.$breakpoint-mobile) {
        .hero__buttons {
          flex-direction: row;
        }
      }

      #vectorSemis {
        position: absolute;
        top: 25%;
        right: 0;
        width: $vector-size;
      }
    }

    footer {
      #vectorBlocks {
        width: calc($vector-size * 3.25);
      }
    }
  }

  #intro {
    background-color: var(--theme-color-background);

    header {
      transform: rotate(180deg) translateY(2px);
    }

    article {
      padding: var(--layout-gap);

      .intro__title {
        text-align: center;
      }

      .intro__grid {
        padding: vars.$size-largest 0;
        display: grid;
        grid-template-columns: 1fr;
        place-items: center;
        gap: calc(#{vars.$size-largest} * 2);

        @media (min-width: vars.$breakpoint-laptop) {
          grid-template-columns: 1fr 1fr;
          // 0 column gap
          gap: calc(#{vars.$size-largest} * 2) 0;
        }
      }
    }
  }

  #sidebar {
    padding: var(--layout-gap);
    background-color: var(--theme-color-background-subtle);

    article {
      @include mixins.box-bordered(
        map-get(vars.$color-brand, "200"),
        $bg: map-get(vars.$theme-dark, "color-text-subtle"),
        $default-shadow: true
      );

      p {
        margin-top: vars.$size-smaller;
      }
    }
  }

  #reason {
    padding: vars.$size-largest var(--layout-gap);
    background-color: var(--theme-color-background);

    .spaced-for-nav {
      // flexbox
      display: flex;
      flex-direction: column;
      gap: calc(vars.$size-largest * 1.25);
    }

    header,
    article {
      display: flex;
      flex-direction: column;
      gap: vars.$size-smaller;
    }

    article {
      gap: vars.$size-small;

      header {
        display: flex;
        flex-direction: row;
        align-items: center;
        gap: vars.$size-smaller;
      }
    }
  }
}

// Theme-wise rules.
[data-theme="dark"] #landing {
  #sidebar {
    article {
      @include mixins.box-bordered(
        map-get(vars.$color-brand, "200"),
        $default-bg: true,
        $default-shadow: true
      );
    }
  }
}
